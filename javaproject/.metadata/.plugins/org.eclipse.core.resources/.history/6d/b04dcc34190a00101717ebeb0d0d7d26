package test;

import java.awt.Color;
import java.awt.Container;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.border.LineBorder;

import day0319.DbConnect;

public class SawonSearch extends JFrame implements ActionListener{
	
	BtnAdd addScore=new BtnAdd("사원정보추가폼");
	BtnUpdate updateScore=new BtnUpdate("사원정보수정폼");
	SelectSawonTable sst=new SelectSawonTable("전체사원정보");
	
	Container cp;
	DbConnect db=new DbConnect();
	JButton btnLogin;
	JTextField id;
	JPasswordField pw;
	JLabel lblTitle,lblId,lblPw;
	
	//생성자
	public SawonSearch(String title) {
		super(title); //JFrame부모생성자를 통해서 창제목을 통해서 제목을 보게하자
		
		//위치 너비
		this.setBounds(500, 100, 700, 500);
		
		cp=this.getContentPane();
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		cp.setBackground(Color.WHITE);
		initdesign();
		
		this.setVisible(true);
	}
	
	//디자인
	public void initdesign()
	{
		this.setLayout(null);
		
		lblTitle=new JLabel("Sist Company");
		lblTitle.setBounds(270, 50, 200, 50);
		lblTitle.setBorder(new LineBorder(Color.PINK, 2, true));
		this.add(lblTitle);
		
		lblId=new JLabel("ID");
		lblId.setBounds(205, 150, 20, 20);
		this.add(lblId);
		
		lblPw=new JLabel("PW");
		lblPw.setBounds(200, 200, 20, 20);
		this.add(lblPw);
		
		id=new JTextField(4);
		id.setBounds(250, 150, 200, 25);
		id.setBackground(Color.PINK);
		this.add(id);
		
		pw=new JPasswordField(4);
		pw.setEchoChar('*');
		pw.setBounds(250, 200, 200, 25);
		pw.setBackground(Color.PINK);
		this.add(pw);
		
		btnLogin=new JButton("로그인");
		btnLogin.setBounds(500, 150, 70, 80);
		btnLogin.setBackground(Color.CYAN);
		this.add(btnLogin);
		
		btnLogin.addActionListener(this);
		
	}
	
	   // ID와 비밀번호가 일치하는지 확인하는 메소드
    public  boolean checkDatabaseForMatchIdAndPw(String idinputText, String pwinputText) {
        // DB 연결 설정
        Connection conn=db.getConnection();
        PreparedStatement stmt = null;
        ResultSet rs = null;

        try {
            // SQL 쿼리문 (id와 password가 모두 일치하는지 확인)
            String sql = "SELECT ID, PASSWORD FROM admin WHERE ID = ? AND PASSWORD = ?";
            stmt = conn.prepareStatement(sql);
            stmt.setString(1, idinputText);  // 입력된 id 설정
            stmt.setString(2, pwinputText);  // 입력된 password 설정

            // 쿼리 실행
            rs = stmt.executeQuery();

            // 결과가 있으면 일치하는 값이 존재함
            if (rs.next()) {
                return true;  // id와 password가 일치하는 레코드 존재
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) rs.close();
                if (stmt != null) stmt.close();
                if (conn != null) conn.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }

        }
        return false;  // 일치하는 값이 없음
    }
	 
	public static void main(String[] args) {
		// TODO Auto-generated method stub
    
		new SawonSearch("사원조회");
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
		Object ob=e.getSource();
		
		if(ob==btnLogin)
		{
			 String enteredId = id.getText();
	         String enteredPw = pw.getText();

	            if (enteredId.isEmpty()) 
	            {
	                JOptionPane.showMessageDialog(this, "id를 입력해주세요");
	            } 
	            
	            else if (enteredPw.isEmpty())
	            {
	                JOptionPane.showMessageDialog(this, "pw를 입력해주세요");
	            } 
	            
	            else 
	            {
	                if (checkDatabaseForMatchIdAndPw(enteredId, enteredPw)) 
	                {
	                    sst.setVisible(true);  // 로그인 성공, SelectSawonTable 창 보이기
	                } 
	                
	                else
	                {
	                    JOptionPane.showMessageDialog(this, "없는 계정입니다. 다시 입력해주세요.");
	                }
	            }
	        }
	
	}
}